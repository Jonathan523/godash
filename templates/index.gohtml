{{ template "base" . }}

{{ define "title" }}
  {{ .Title }}
{{ end }}

{{ define "content" }}
  {{ template "weatherIcons" . }}
  {{ if .Weather.Name }}
    <div class="flex items-center mb-6 md:mb-10 select-none">
      <svg class="w-20 h-20 md:w-14 md:h-14 mr-5">
        {{ range .Weather.Weather }}
          <use id="weatherIcon" xlink:href="#{{ .Icon }}"></use>
        {{ end }}
      </svg>
      <div class="flex flex-col md:flex-row">
        <div class="text-4xl font-bold mr-8" id="weatherTemp">{{ .Weather.Main.Temp }} {{ .Weather.Units }}</div>
        <div class="flex flex-col md:flex-row mt-1 text-sm text-slate-700 dark:text-slate-300">
          <div class="flex items-center md:mr-5">
            <svg width="14" height="14" class="mr-2">
              <use xlink:href="#quote"></use>
            </svg>
            {{ range .Weather.Weather }}
              {{ .Description }}
            {{ end }}
          </div>
          <div class="flex items-center md:mr-5">
            <svg width="14" height="14" class="mr-2">
              <use xlink:href="#humidity"></use>
            </svg>
            {{ .Weather.Main.Humidity }}%
          </div>
          <div class="hidden lg:flex items-center">
            <div class="flex items-center md:mr-5">
              <svg width="15" height="15" class="mr-2">
                <use xlink:href="#location"></use>
              </svg>
              {{ .Weather.Name }}
            </div>
            <div class="flex items-center md:mr-5">
              <svg width="18" height="18" class="mr-2 mt-1">
                <use xlink:href="#sunrise"></use>
              </svg>
              {{ .Weather.Sys.StrSunrise }}
            </div>
            <div class="flex items-center md:mr-5">
              <svg width="18" height="18" class="mr-2 mt-1">
                <use xlink:href="#sunset"></use>
              </svg>
              {{ .Weather.Sys.StrSunset }}
            </div>
          </div>
        </div>
      </div>
    </div>
  {{ end }}


  <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-5">
    {{ range .Bookmarks }}
      <a
        href="{{ .Url }}"
        class="link flex items-center rounded-md hover:underline underline-offset-2 decoration-gray-500 text-sm text-slate-700 dark:text-slate-300 hover:text-slate-900 dark:hover:text-slate-50 ease-in duration-200"
      >
        <div class="img rounded-md w-8 h-8 bg-cover bg-center opacity-90" style="background-image: url({{ .Icon }})"></div>
        <div class="uppercase truncate ml-2">
          {{ .Name }}
        </div>
      </a>
    {{ end }}
  </div>
{{ end }}

{{ define "scripts" }}
  <script lang="ts">
    import { weather_OpenWeatherApiResponse } from "./openapi";

    const WsType = { Weather: 0, System: 1 };
    let socket = new WebSocket(window.location.origin.replace("http", "ws") + "/api/system/ws");
    const weatherIcon = document.getElementById("weatherIcon");
    const weatherTemp = document.getElementById("weatherTemp");

    socket.onmessage = (event) => {
      const parsed = JSON.parse(event.data);
      if (parsed.ws_type === WsType.Weather) {
        const weather: weather_OpenWeatherApiResponse = parsed.message;
        weatherIcon.setAttribute("xlink:href", "#" + weather.weather[0].icon);
        weatherTemp.innerHTML = parsed.message.main.temp + " " + parsed.message.units;
      }
    };
  </script>
{{ end }}
